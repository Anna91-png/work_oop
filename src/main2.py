from product import Product
from category import Category
from src.Smartphone import Smartphone
from src.LawnGrass import LawnGrass

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (Product)
    product1 = Product("Samsung Galaxy S23 Ultra", "256GB, –°–µ—Ä—ã–π —Ü–≤–µ—Ç, 200MP –∫–∞–º–µ—Ä–∞", 180000.0, 5)
    product2 = Product("Iphone 15", "512GB, Gray space", 210000.0, 8)
    product3 = Product("Xiaomi Redmi Note 11", "1024GB, –°–∏–Ω–∏–π", 31000.0, 14)

    category1 = Category(
        "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã",
        "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã, –∫–∞–∫ —Å—Ä–µ–¥—Å—Ç–≤–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏, –Ω–æ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∂–∏–∑–Ω–∏",
        [product1, product2, product3]
    )

    print(category1.products)

    product4 = Product("55\" QLED 4K", "–§–æ–Ω–æ–≤–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞", 123000.0, 7)
    category1.add_product(product4)
    print(category1.products)
    print(category1.total_product_count)

    new_product = Product.new_product({
        "name": "Samsung Galaxy S23 Ultra",
        "description": "256GB, –°–µ—Ä—ã–π —Ü–≤–µ—Ç, 200MP –∫–∞–º–µ—Ä–∞",
        "price": 180000.0,
        "quantity": 5
    })

    print(new_product.name)
    print(new_product.description)
    print(new_product.price)
    print(new_product.quantity)

    new_product.price = 800
    print(new_product.price)

    new_product.price = -100
    print(new_product.price)

    new_product.price = 0
    print(new_product.price)

    # üü° –î–û–ë–ê–í–õ–Ø–ï–ú: –û–±—ä–µ–∫—Ç—ã —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ –∏ —Ç—Ä–∞–≤—ã
    smartphone1 = Smartphone("Samsung Galaxy S23 Ultra", "256GB, –°–µ—Ä—ã–π —Ü–≤–µ—Ç, 200MP –∫–∞–º–µ—Ä–∞", 180000.0, 5, 95.5, "S23 Ultra", 256, "–°–µ—Ä—ã–π")
    smartphone2 = Smartphone("Iphone 15", "512GB, Gray space", 210000.0, 8, 98.2, "15", 512, "Gray space")
    smartphone3 = Smartphone("Xiaomi Redmi Note 11", "1024GB, –°–∏–Ω–∏–π", 31000.0, 14, 90.3, "Note 11", 1024, "–°–∏–Ω–∏–π")

    grass1 = LawnGrass("–ì–∞–∑–æ–Ω–Ω–∞—è —Ç—Ä–∞–≤–∞", "–≠–ª–∏—Ç–Ω–∞—è —Ç—Ä–∞–≤–∞ –¥–ª—è –≥–∞–∑–æ–Ω–∞", 500.0, 20, "–†–æ—Å—Å–∏—è", "7 –¥–Ω–µ–π", "–ó–µ–ª–µ–Ω—ã–π")
    grass2 = LawnGrass("–ì–∞–∑–æ–Ω–Ω–∞—è —Ç—Ä–∞–≤–∞ 2", "–í—ã–Ω–æ—Å–ª–∏–≤–∞—è —Ç—Ä–∞–≤–∞", 450.0, 15, "–°–®–ê", "5 –¥–Ω–µ–π", "–¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π")

    print(str(product1))
    print(str(product2))
    print(str(product3))

    category1 = Category(
        "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã",
        "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã, –∫–∞–∫ —Å—Ä–µ–¥—Å—Ç–≤–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏, –Ω–æ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∂–∏–∑–Ω–∏",
        [product1, product2, product3]
    )

    print(str(category1))
    print([str(product) for product in category1.products])

    print(product1 + product2)
    print(product1 + product3)
    print(product2 + product3)

    # üîπ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ grass2 –∏ smartphone1 ‚Äî —Ç–µ–ø–µ—Ä—å –æ–Ω–∏ –µ—Å—Ç—å!
    print(grass2.country)
    print(grass2.germination_period)
    print(grass2.color)

    smartphone_sum = smartphone1 + smartphone2
    print(f"Total quantity of smartphones: {smartphone_sum}")

    grass_sum = grass1 + grass2
    print(f"Total quantity of grass: {grass_sum}")

    try:
        invalid_sum = smartphone1 + grass1
    except TypeError:
        print("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ TypeError –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–ª–æ–∂–µ–Ω–∏—è")
    else:
        print("–ù–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ TypeError –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–ª–æ–∂–µ–Ω–∏—è")

    category_smartphones = Category("–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã", "–í—ã—Å–æ–∫–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–µ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ã", [smartphone1, smartphone2])
    category_grass = Category("–ì–∞–∑–æ–Ω–Ω–∞—è —Ç—Ä–∞–≤–∞", "–†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã –≥–∞–∑–æ–Ω–Ω–æ–π —Ç—Ä–∞–≤—ã", [grass1, grass2])
    category_smartphones.add_product(smartphone3)

    print(category_smartphones.products)
    print(f"Total products: {Product.product_count}")

    try:
        category_smartphones.add_product("Not a product")
    except TypeError:
        print("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ TypeError –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–µ –ø—Ä–æ–¥—É–∫—Ç–∞")
    else:
        print("–ù–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ TypeError –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–µ –ø—Ä–æ–¥—É–∫—Ç–∞")